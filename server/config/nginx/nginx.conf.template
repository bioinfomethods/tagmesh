#
# This software is licensed under the BSD 2-Clause license.
# 
# Copyright 2024 Simon Sadedin
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# ------------------------------------
# Nginx Configuration File for TagMesh
# ------------------------------------
# 
# This file is configures Nginx as a front end
# to sit in front of CouchDB. This allows to add standard
# security options such as TLS certificates or other Nginx features,
# as well as modifying the default CouchDB behaviour so that 
# non-admin users can create databases. This latter is accomplished
# by adding the admin authorization credentials as the Authorizaion
# header for the specific URL path and method (PUT request) required
# to create a new database. All other CouchDB requests are passed
# through using the user's own credentials. For this to work, you
# must set the base-64 encoded version of your admin password as
# an environment variable in your .env file as the 
# COUCHDB_ADMIN_PASSWORD_ENC variable.
#
#-------------------------------------

map $request_method $auth_header {
    default $http_authorization;
    PUT "Basic ${COUCHDB_ADMIN_PASSWORD_ENC}";
}

server {

    resolver 127.0.0.11 valid=30s;
    set $couchdb couchdb:5984;

    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml;

    listen 80;
    server_name localhost;

    root /www/dist;
    
    location ~ ^/db/([^/]+)/$ {

        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

        rewrite /db/(.*) /$1  break;
        proxy_pass http://$couchdb;

        proxy_set_header Authorization $auth_header;

    }

    location ~ ^/db/ {

        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

        rewrite /db/(.*) /$1  break;
        proxy_pass http://$couchdb;
    }
  
}
